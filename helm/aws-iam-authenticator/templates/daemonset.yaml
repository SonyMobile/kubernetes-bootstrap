apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  namespace: kube-system
  name: aws-iam-authenticator
  labels:
    k8s-app: aws-iam-authenticator
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: "{{ .Values.name }}"
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
        chksum: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      labels:
        k8s-app: aws-iam-authenticator
        component: "{{ .Values.name }}"
        release: {{ .Release.Name }}
    spec:
      # run on the host network (don't depend on CNI)
      hostNetwork: true

      # run on each master node
      nodeSelector:
        node-role.kubernetes.io/master: ""
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - key: CriticalAddonsOnly
          operator: Exists

        # run `aws-iam-authenticator server` with three volumes
        # - config (mounted from the ConfigMap at /etc/aws-iam-authenticator/config.yaml)
        # - state (persisted TLS certificate and keys, mounted from the host)
        # - output (output kubeconfig to plug into your apiserver configuration, mounted from the host)
      containers:
        - name: aws-iam-authenticator
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          args:
            - server
            - --config=/etc/aws-iam-authenticator/config.yaml
            - --state-dir=/var/aws-iam-authenticator
            - --generate-kubeconfig=/etc/kubernetes/aws-iam-authenticator/kubeconfig.yaml

          resources:
            requests:
              memory: 20Mi
              cpu: 10m
            limits:
              memory: 20Mi
              cpu: 100m

          volumeMounts:
            - name: config
              mountPath: /etc/aws-iam-authenticator/
            - name: state
              mountPath: /var/aws-iam-authenticator/
            - name: output
              mountPath: /etc/kubernetes/aws-iam-authenticator/

      volumes:
        - name: config
          configMap:
            name: aws-iam-authenticator
        - name: output
          hostPath:
            path: /srv/kubernetes/aws-iam-authenticator/
        - name: state
          hostPath:
            path: /srv/kubernetes/aws-iam-authenticator/

